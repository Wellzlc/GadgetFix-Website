const spamProtectionScript = "/**\r\n * Spam Protection Tracking\r\n * Collects behavioral data for anti-spam analysis\r\n */\r\n\r\nclass SpamProtection {\r\n  constructor(form) {\r\n    this.form = form;\r\n    this.startTime = Date.now();\r\n    this.keystrokes = 0;\r\n    this.mouseMovements = 0;\r\n    this.fieldFocusOrder = [];\r\n    this.copyPasteEvents = 0;\r\n    this.sessionId = this.generateSessionId();\r\n    this.init();\r\n  }\r\n  \r\n  init() {\r\n    // Track keystrokes\r\n    this.form.addEventListener('keypress', () => this.keystrokes++);\r\n    \r\n    // Track mouse movements\r\n    this.form.addEventListener('mousemove', () => this.mouseMovements++);\r\n    \r\n    // Track field focus order\r\n    this.form.querySelectorAll('input, textarea').forEach(field => {\r\n      field.addEventListener('focus', () => {\r\n        if (!this.fieldFocusOrder.includes(field.name)) {\r\n          this.fieldFocusOrder.push(field.name);\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Track copy/paste\r\n    this.form.addEventListener('paste', () => this.copyPasteEvents++);\r\n    \r\n    // Add honeypot field\r\n    this.addHoneypot();\r\n  }\r\n  \r\n  addHoneypot() {\r\n    const honeypot = document.createElement('div');\r\n    honeypot.style.position = 'absolute';\r\n    honeypot.style.left = '-9999px';\r\n    honeypot.innerHTML = '<input type=\"text\" name=\"website\" tabindex=\"-1\" autocomplete=\"off\" />';\r\n    this.form.appendChild(honeypot);\r\n  }\r\n  \r\n  getMetadata() {\r\n    return {\r\n      submissionTime: Date.now() - this.startTime,\r\n      keystrokes: this.keystrokes,\r\n      mouseMovements: this.mouseMovements,\r\n      fieldFocusOrder: this.fieldFocusOrder,\r\n      copyPasteEvents: this.copyPasteEvents,\r\n      sessionId: this.sessionId,\r\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n      language: navigator.language,\r\n      screenResolution: `${screen.width}x${screen.height}`,\r\n      colorDepth: screen.colorDepth,\r\n      platform: navigator.platform,\r\n      plugins: this.getPlugins()\r\n    };\r\n  }\r\n  \r\n  generateSessionId() {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n  \r\n  getPlugins() {\r\n    try {\r\n      return Array.from(navigator.plugins).map(p => p.name).slice(0, 10);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\r\n// Export for use\r\nwindow.SpamProtection = SpamProtection;";

export { spamProtectionScript as s };
