---
/**
 * Anti-Spam Admin Dashboard
 * Protected page for monitoring and managing the spam protection system
 */

import Layout from '../../layouts/Layout.astro';
import SpamGuardDashboard from '../../components/admin/SpamGuardDashboard.astro';

// Basic authentication check
// In production, implement proper authentication
const isAuthenticated = true; // TODO: Implement actual auth check

// Note: Server-side auth would be implemented here in production
---

<Layout 
  title="Anti-Spam Dashboard | GadgetFix Admin"
  description="Admin dashboard for managing the GadgetFix anti-spam system"
>
  <div class="admin-container">
    <div class="admin-header">
      <a href="/" class="back-link">‚Üê Back to Site</a>
      <div class="header-center">
        <div class="admin-badge">Admin Panel</div>
      </div>
      <button id="logout-btn" class="logout-button">Logout</button>
    </div>
    
    <SpamGuardDashboard />
  </div>
</Layout>

<style>
  .admin-container {
    min-height: 100vh;
    background: #f3f4f6;
  }
  
  .admin-header {
    background: #1f2937;
    color: white;
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .back-link {
    color: white;
    text-decoration: none;
    font-size: 14px;
    transition: opacity 0.2s;
  }
  
  .back-link:hover {
    opacity: 0.8;
  }
  
  .admin-badge {
    background: #dc2626;
    padding: 4px 12px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .logout-button {
    background: #dc2626;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
    transition: background 0.2s;
  }
  
  .logout-button:hover {
    background: #b91c1c;
  }
  
  /* Add authentication modal styles if needed */
  .auth-required {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
  }
  
  .auth-modal {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    max-width: 400px;
    width: 90%;
  }
  
  .auth-modal h2 {
    margin-top: 0;
    color: #1f2937;
  }
  
  .auth-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .auth-form input {
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 4px;
    font-size: 16px;
  }
  
  .auth-form button {
    background: #2563eb;
    color: white;
    padding: 0.75rem;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s;
  }
  
  .auth-form button:hover {
    background: #1d4ed8;
  }
</style>

<script>
  // Add authentication logic here if needed
  document.addEventListener('DOMContentLoaded', () => {
    // Check for admin credentials
    const adminToken = localStorage.getItem('admin_token');
    
    if (!adminToken) {
      // Hide the dashboard content initially
      document.querySelector('.admin-container').style.display = 'none';
      
      // Show authentication modal
      const authModal = document.createElement('div');
      authModal.className = 'auth-required';
      authModal.innerHTML = `
        <div class="auth-modal">
          <h2>Authentication Required</h2>
          <form class="auth-form" id="authForm">
            <input type="password" placeholder="Admin Password" id="adminPassword" required />
            <button type="submit">Login</button>
          </form>
        </div>
      `;
      
      document.body.appendChild(authModal);
      
      document.getElementById('authForm')?.addEventListener('submit', (e) => {
        e.preventDefault();
        const password = (document.getElementById('adminPassword') as HTMLInputElement).value;
        
        // TODO: Validate password against secure backend
        // This is just a placeholder - implement proper auth
        if (password === 'Lc9401765@#$') {
          localStorage.setItem('admin_token', 'authenticated');
          authModal.remove();
          // Show the dashboard content
          document.querySelector('.admin-container').style.display = 'block';
          // Reload to initialize dashboard properly
          location.reload();
        } else {
          alert('Invalid password');
        }
      });
    } else {
      // User is authenticated, show dashboard
      document.querySelector('.admin-container').style.display = 'block';
    }
    
    // Add logout functionality
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', () => {
        localStorage.removeItem('admin_token');
        location.reload();
      });
    }
  });
</script>